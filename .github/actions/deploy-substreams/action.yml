name: Deploy Substream Infra
description: Deploys the infrastrcuture and apps to an environment
inputs:
  stage:
    description: Environment to deploy on
    required: true
    default: dev
  secrets:
    description: Secrets
    required: true
runs:
  using: composite
  steps:
    - uses: actions/setup-node@v2
      with:
        node-version: 16.x
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ fromJSON(inputs.secrets).AWS_ACCESS_KEY_ID }}
        aws-region: ${{ fromJSON(inputs.secrets).AWS_REGION }}
        aws-secret-access-key: ${{ fromJSON(inputs.secrets).AWS_SECRET_ACCESS_KEY }}
    - name: Install pulumi
      uses: pulumi/setup-pulumi@v2
    - name: Login to Pulumi backend
      shell: bash
      run: pulumi login s3://nftcom-pulumi-state
    - name: Install Infra Deps
      working-directory: infra
      shell: bash
      run: npm install
    - name: Deploy Substreams RDS
      shell: bash
      working-directory: infra
      env:
        STAGE: ${{ inputs.stage }}
        PULUMI_CONFIG_PASSPHRASE: ""
        AWS_REGION: ${{ fromJSON(inputs.secrets).AWS_REGION }}
        SUBSTREAMS_DB_PASSWORD: ${{ fromJSON(inputs.secrets).SUBSTREAMS_DB_PASSWORD}}
        GH_TOKEN: ${{ fromJSON(inputs.secrets).GH_TOKEN}}
        GH_USER: ${{ fromJSON(inputs.secrets).GH_USER}}
        STREAMINGFAST_KEY: ${{ fromJSON(inputs.secrets).STREAMINGFAST_KEY}}
      run: npm run deploy:substreams
    - name: Deploy Substreams EC2
      shell: bash
      working-directory: infra
      env:
        STAGE: ${{ inputs.stage }}
        PULUMI_CONFIG_PASSPHRASE: ""
        AWS_REGION: ${{ fromJSON(inputs.secrets).AWS_REGION }}
        SUBSTREAMS_DB_PASSWORD: ${{ fromJSON(inputs.secrets).SUBSTREAMS_DB_PASSWORD}}
        GH_TOKEN: ${{ fromJSON(inputs.secrets).GH_TOKEN}}
        GH_USER: ${{ fromJSON(inputs.secrets).GH_USER}}
        DATADOG_API_KEY: ${{ fromJSON(inputs.secrets).DATADOG_API_KEY}}
        STREAMINGFAST_KEY: ${{ fromJSON(inputs.secrets).STREAMINGFAST_KEY}}
        ETH_ENDPOINT: ${{ fromJSON(inputs.secrets).ETH_ENDPOINT}}
      run: npm run deploy:substreamsInstance