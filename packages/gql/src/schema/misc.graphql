type FileUploadOutput {
  bucket: String!
  accessKey: String!
  secretKey: String!
  sessionToken: String!
}

type EndGkWinner {
  key: String
  value: String
}

type EndGkOutput {
  topBids: [EndGkWinner]!
  firstLosingBid: [EndGkWinner]!
  whitelistWinnersCount: Uint256!
  medianPrice: String!
  totalBidsCount: Uint256!
}

input getContractsInput {
  chainId: String!
}

input convertEnsToEthAddressInput {
  ensAddresses: [String!]!
}

type ConvertEnsToEthAddress {
  ethAddresses: [String!]!
}

type GetContracts {
  marketplace: String!
  marketplaceEvent: String!
  validationLogic: String!
  nftToken: String!
  profileAuction: String!
  genesisKey: String!
  nftProfile: String!
  genesisKeyStake: String!
  genesisKeyTeamClaim: String!
  genesisKeyDistributor: String!
  genesisKeyTeamMerkle: String!
}

extend type Query {
  getContracts(input: getContractsInput!): GetContracts!
  convertEnsToEthAddress(input: convertEnsToEthAddressInput!): ConvertEnsToEthAddress!
}

extend type Mutation {
  uploadFileSession: FileUploadOutput!
  endGKBlindAuction: EndGkOutput!
}
