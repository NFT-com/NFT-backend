enum AssetClass {
  ETH
  ERC20
  ERC721
  ERC1155
}

enum AuctionType {
  FixedPrice
  English
  Decreasing
}

type GetMarketAsk {
  items: [MarketAsk!]
  pageInfo: PageInfo
  totalItems: Int
}

type AssetType {
  assetClass: String!
  bytes: String!
  contractAddress: Address!
  tokenId: Uint256!
  allowAll: Boolean!
}

type MarketplaceAsset {
  standard: AssetType!
  nftId: String!
  bytes: String!
  value: Uint256!
  minimumBid: Uint256!
}

type MarketAsk {
  id: ID!
  structHash: String!
  nonce: Int!
  signature: Signature!
  makerAddress: Address!
  makeAsset: [MarketplaceAsset!]
  takerAddress: Address!
  takeAsset: [MarketplaceAsset!]
  marketSwapId: String
  approvalTxHash: String
  cancelTxHash: String
  start: Int!
  end: Int!
  salt: Int!
  offerAcceptedAt: DateTime
  chainId: String!
  auctionType: AuctionType!
}

input AsksInput {
  makerAddress: Address
  pageInput: PageInput
}

input NftAsksInput {
  nftTokenId: Uint256!
  nftContractAddress: Address!
  makerAddress: Address
}

input AssetTypeInput {
  assetClass: AssetClass!
  bytes: String!
  contractAddress: String!
  tokenId: Uint256!
  allowAll: Boolean!
}

input MarketplaceAssetInput {
  standard: AssetTypeInput!
  bytes: String!
  value: Uint256!
  minimumBid: Uint256!
}

input CreateAskInput {
  structHash: String!
  nonce: Int!
  auctionType: AuctionType!
  signature: SignatureInput!
  makerAddress: Address!
  makeAsset: [MarketplaceAssetInput!]
  takerAddress: Address!
  takeAsset: [MarketplaceAssetInput!]
  start: Int!
  end: Int!
  salt: Int!
  chainId: String!
}

extend type Query {
  getAsks(input: AsksInput!): GetMarketAsk!
  getNFTAsks(input: NftAsksInput!): [MarketAsk!]!
}

extend type Mutation {
  createAsk(input: CreateAskInput!): MarketAsk!
  cancelAsk(askId: ID!): Boolean!
}
