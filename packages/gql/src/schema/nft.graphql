enum NFTType {
  ERC721
  ERC1155
  Profile
  GenesisKey
  GenesisKeyProfile
}

enum NFTSize {
  Small
  Medium
  Large
}

type NFTTrait {
  type: String!
  value: String!
}

type NFTMetadata {
  tokenId: String!
  name: String
  description: String
  imageURL: String
  traits: [NFTTrait!]!
#  txHash: String!
}

type NFT {
  id: ID!
  contract: String
  isOwnedByMe: Boolean
  metadata: NFTMetadata!
  price: Uint256!
  type: NFTType!
#  user: User
  wallet: Wallet
  createdAt: DateTime!
}

input NFTsInput {
  pageInput: PageInput
  types: [NFTType!]
  profileId: ID
}

input CollectionInput {
  collectionId: ID!
  pageInput: PageInput
  # TODO: add filters
}

type NFTsOutput {
  items: [NFT!]!
  pageInfo: PageInfo
  totalItems: Int
}

type CollectionNFT {
  nft: NFT!
  size: NFTSize
  # TODO: add display preferences here
}

type CollectionNFTsOutput {
  items: [CollectionNFT!]!
  pageInfo: PageInfo
  totalItems: Int
}

type RefreshMyNFTsOutput {
  status: Boolean!
  message: String
}

extend type Query {
  nft(id: ID!): NFT!
  nfts(input: NFTsInput!): CollectionNFTsOutput!
  myNFTs(input: NFTsInput): NFTsOutput!
  collectionNFTs(input: CollectionInput!): CollectionNFTsOutput!
}

extend type Mutation {
  refreshMyNFTs: RefreshMyNFTsOutput!
}
