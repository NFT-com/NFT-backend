type Wallet {
  id: ID!
  address: Address!
  chainId: String!
  chainName: String!
  network: String!
  profileId: String
  preferredProfile: Profile
  user: User
  createdAt: DateTime!
}

input WalletInput {
  address: Address!
  chainId: String!
  network: String!
}

input WhitelistCheckInput {
  address: Address!
}

extend type Query {
  isAddressWhitelisted(input: WhitelistCheckInput): Boolean!
}

extend type Mutation {
  "AUTHENTICATED"
  addAddress(input: WalletInput!): Wallet!
  "AUTHENTICATED"
  updateWalletProfileId(profileId: String!): Wallet!
}

