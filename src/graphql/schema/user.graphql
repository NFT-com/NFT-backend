type User {
    id: ID!
    isEmailConfirmed: Boolean!
    avatarURL: String
    referredBy: String
    addresses: [Wallet!]
}

input SignUpInput {
    avatarURL: String
    email: String!
    referredBy: String
    wallet: WalletInput!
}

input UpdateUserInput {
    referredBy: String
    avatarURL: String
}

extend type Query {
#    user(id: ID!): User!
    me: User!
}

extend type Mutation {
    signUp(input: SignUpInput!): User!
    updateMe(input: UpdateUserInput!): User!
    confirmEmail(token: Int!): Boolean!
}
