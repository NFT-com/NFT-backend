enum BidStatus {
  Executed
  Submitted
}

#type BidMetadata {
#  #  amount: Uint256!
#  price: Uint256!
#  profileURL: String
#  signature: Signature!
#  stakeWeightedSeconds: Int
#  #  txHash: String
#}

type Bid {
  id: ID!
  nftType: NFTType!
  price: Uint256!
  profile: Profile
  signature: Signature!
  stakeWeightedSeconds: Int
  status: BidStatus!
#  metadata: BidMetadata!
#  user: User
  wallet: Wallet
  createdAt: DateTime!
  updatedAt: DateTime!
}

input BidInput {
  nftType: NFTType!
#  amount: Uint256!
  wallet: WalletInput!
  price: Uint256!
  profileURL: String
  signature: SignatureInput!
}

input BidsInput {
  pageInput: PageInput
  profileId: ID
  wallet: WalletInput
  nftType: NFTType
}

type BidsOutput {
  items: [Bid!]!
  pageInfo: PageInfo
  totalItems: Int
}

type SignHashOutput {
  signature: String!
  hash: String!
}

input TopBidsInput {
  pageInput: PageInput
  profileId: ID
  status: BidStatus
}

input ProfilePreferenceInput {
  urls: [String!]!
}

extend type Query {
  bids(input: BidsInput): BidsOutput!
  myBids(input: BidsInput): BidsOutput!
  topBids(input: TopBidsInput): BidsOutput!
}

extend type Mutation {
  bid(input: BidInput!): Bid!
  cancelBid(id: ID!): Boolean!
  signHash: SignHashOutput!
  setProfilePreferences(input: ProfilePreferenceInput!): [Bid!]!
}
